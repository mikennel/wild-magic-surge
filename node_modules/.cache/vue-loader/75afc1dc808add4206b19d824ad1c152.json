{"remainingRequest":"/Users/mikennel/Documents/Code/wild-magic-surge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mikennel/Documents/Code/wild-magic-surge/src/components/common/ProInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mikennel/Documents/Code/wild-magic-surge/src/components/common/ProInput.vue","mtime":1578077374536},{"path":"/Users/mikennel/Documents/Code/wild-magic-surge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikennel/Documents/Code/wild-magic-surge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nexport default {\n  name: 'ProInput',\n  props: {\n    value: {\n      required: true,\n    },\n    options: {\n      default: {},\n    },\n  },\n  watch: {\n    input (input) {\n      this.$emit('input', input)\n    },\n    value (newValue) {\n      this.input = newValue\n    },\n  },\n  data () {\n    return {\n      input: null,\n      focused: false,\n      entered: false,\n    }\n  },\n  computed: {\n    isActive () {\n      return this.focused || this.input\n    },\n    placeholderCopy () {\n      return (this.entered && this.error) ? this.error : this.options.title\n    },\n    error () {\n      return this.options.errorIf && this.options.errorIf(this.input)\n    },\n  },\n  methods: {\n    handleKey (e) {\n      if (e.code === 'Enter') {\n        this.options.onEnter && this.options.onEnter()\n      }\n    },\n  },\n}\n",{"version":3,"sources":["ProInput.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProInput.vue","sourceRoot":"src/components/common","sourcesContent":["<script>\nexport default {\n  name: 'ProInput',\n  props: {\n    value: {\n      required: true,\n    },\n    options: {\n      default: {},\n    },\n  },\n  watch: {\n    input (input) {\n      this.$emit('input', input)\n    },\n    value (newValue) {\n      this.input = newValue\n    },\n  },\n  data () {\n    return {\n      input: null,\n      focused: false,\n      entered: false,\n    }\n  },\n  computed: {\n    isActive () {\n      return this.focused || this.input\n    },\n    placeholderCopy () {\n      return (this.entered && this.error) ? this.error : this.options.title\n    },\n    error () {\n      return this.options.errorIf && this.options.errorIf(this.input)\n    },\n  },\n  methods: {\n    handleKey (e) {\n      if (e.code === 'Enter') {\n        this.options.onEnter && this.options.onEnter()\n      }\n    },\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  .pro-input-main\n    .pro-input-container(\n      :class='options.containerClass'\n    )\n      .input-holder(\n        :class='error && entered ? \"error\" : \"\"'\n      )\n        .placeholder(\n          :class='isActive ? \"active\" : \"\"'\n        ) {{placeholderCopy}}\n        input(\n          v-if='options.type === \"number\"'\n          type='number'\n          v-model='input'\n          @keydown='handleKey'\n          @focus='focused = true'\n          @blur='focused = false;entered = true'\n        )\n        input(\n          v-if='options.type === \"password\"'\n          type='password'\n          v-model='input'\n          @keydown='handleKey'\n          @focus='focused = true'\n          @blur='focused = false;entered = true'\n        )\n        input(\n          v-else\n          v-model='input'\n          @keydown='handleKey'\n          @focus='focused = true'\n          @blur='focused = false;entered = true'\n        )\n</template>\n\n<style lang=\"sass\" scoped>\n  @import '$vars'\n  .pro-input-main\n    .pro-input-container\n      .input-holder\n        position: relative\n        margin-top: 5px\n        &.error\n          .placeholder\n            color: red !important\n          > input\n            border-bottom-color: red\n            &:focus\n              border-bottom-color: red !important\n        .placeholder\n          user-select: none\n          position: absolute\n          top: 4px\n          color: #BBB\n          transition: all .25s\n          font-family: $font-2\n          &.active\n            font-size: .7em\n            top: -12px\n            color: #AAA\n        > input\n          margin-bottom: 0\n          height: 2rem\n          z-index: 1\n          position: relative\n          padding-bottom: 3px\n          color: #000\n          background-color: transparent\n          border: none\n          border-bottom: thin black solid\n          width: 100%\n          font-family: $font-1\n          font-size: 1.2em\n          &:focus\n            transition: .25s all\n            border-bottom: 1px solid black !important\n            box-shadow: none !important\n            color: #000\n            outline: none\n\n</style>\n"]}]}