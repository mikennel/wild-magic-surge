{"remainingRequest":"C:\\Users\\micha\\Documents\\Code\\wild-magic-surge\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\micha\\Documents\\Code\\wild-magic-surge\\src\\components\\common\\ProInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\micha\\Documents\\Code\\wild-magic-surge\\src\\components\\common\\ProInput.vue","mtime":1603221301043},{"path":"C:\\Users\\micha\\Documents\\Code\\wild-magic-surge\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\micha\\Documents\\Code\\wild-magic-surge\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default {\r\n  name: 'ProInput',\r\n  props: {\r\n    value: {\r\n      required: true,\r\n    },\r\n    options: {\r\n      default: {},\r\n    },\r\n  },\r\n  watch: {\r\n    input (input) {\r\n      this.$emit('input', input)\r\n    },\r\n    value (newValue) {\r\n      this.input = newValue\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      input: null,\r\n      focused: false,\r\n      entered: false,\r\n    }\r\n  },\r\n  computed: {\r\n    isActive () {\r\n      return this.focused || this.input\r\n    },\r\n    placeholderCopy () {\r\n      return (this.entered && this.error) ? this.error : this.options.title\r\n    },\r\n    error () {\r\n      return this.options.errorIf && this.options.errorIf(this.input)\r\n    },\r\n  },\r\n  methods: {\r\n    handleKey (e) {\r\n      if (e.code === 'Enter') {\r\n        this.options.onEnter && this.options.onEnter()\r\n      }\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["ProInput.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProInput.vue","sourceRoot":"src/components/common","sourcesContent":["<script>\r\nexport default {\r\n  name: 'ProInput',\r\n  props: {\r\n    value: {\r\n      required: true,\r\n    },\r\n    options: {\r\n      default: {},\r\n    },\r\n  },\r\n  watch: {\r\n    input (input) {\r\n      this.$emit('input', input)\r\n    },\r\n    value (newValue) {\r\n      this.input = newValue\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      input: null,\r\n      focused: false,\r\n      entered: false,\r\n    }\r\n  },\r\n  computed: {\r\n    isActive () {\r\n      return this.focused || this.input\r\n    },\r\n    placeholderCopy () {\r\n      return (this.entered && this.error) ? this.error : this.options.title\r\n    },\r\n    error () {\r\n      return this.options.errorIf && this.options.errorIf(this.input)\r\n    },\r\n  },\r\n  methods: {\r\n    handleKey (e) {\r\n      if (e.code === 'Enter') {\r\n        this.options.onEnter && this.options.onEnter()\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<template lang=\"pug\">\r\n  .pro-input-main\r\n    .pro-input-container(\r\n      :class='options.containerClass'\r\n    )\r\n      .input-holder(\r\n        :class='error && entered ? \"error\" : \"\"'\r\n      )\r\n        .placeholder(\r\n          :class='isActive ? \"active\" : \"\"'\r\n        ) {{placeholderCopy}}\r\n        input(\r\n          v-if='options.type === \"number\"'\r\n          type='number'\r\n          v-model='input'\r\n          @keydown='handleKey'\r\n          @focus='focused = true'\r\n          @blur='focused = false;entered = true'\r\n        )\r\n        input(\r\n          v-if='options.type === \"password\"'\r\n          type='password'\r\n          v-model='input'\r\n          @keydown='handleKey'\r\n          @focus='focused = true'\r\n          @blur='focused = false;entered = true'\r\n        )\r\n        input(\r\n          v-else\r\n          v-model='input'\r\n          @keydown='handleKey'\r\n          @focus='focused = true'\r\n          @blur='focused = false;entered = true'\r\n        )\r\n</template>\r\n\r\n<style lang=\"sass\" scoped>\r\n  @import '$vars'\r\n  .pro-input-main\r\n    .pro-input-container\r\n      .input-holder\r\n        position: relative\r\n        margin-top: 5px\r\n        &.error\r\n          .placeholder\r\n            color: red !important\r\n          > input\r\n            border-bottom-color: red\r\n            &:focus\r\n              border-bottom-color: red !important\r\n        .placeholder\r\n          user-select: none\r\n          position: absolute\r\n          top: 4px\r\n          color: #BBB\r\n          transition: all .25s\r\n          font-family: $font-2\r\n          &.active\r\n            font-size: .7em\r\n            top: -12px\r\n            color: #AAA\r\n        > input\r\n          margin-bottom: 0\r\n          height: 2rem\r\n          z-index: 1\r\n          position: relative\r\n          padding-bottom: 3px\r\n          color: #000\r\n          background-color: transparent\r\n          border: none\r\n          border-bottom: thin black solid\r\n          width: 100%\r\n          font-family: $font-1\r\n          font-size: 1.2em\r\n          &:focus\r\n            transition: .25s all\r\n            border-bottom: 1px solid black !important\r\n            box-shadow: none !important\r\n            color: #000\r\n            outline: none\r\n\r\n</style>\r\n"]}]}