{"remainingRequest":"/Users/mikennel/Documents/Code/wild-magic-surge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mikennel/Documents/Code/wild-magic-surge/src/components/routed/Public/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mikennel/Documents/Code/wild-magic-surge/src/components/routed/Public/SignUp.vue","mtime":1578077374538},{"path":"/Users/mikennel/Documents/Code/wild-magic-surge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikennel/Documents/Code/wild-magic-surge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport ProInput from '$common/ProInput'\nexport default {\n  name: 'PublicSignUp',\n  components: {\n    'pro-input': ProInput,\n  },\n  watch: {\n    'form.name': function (val) {\n      if (val !== 'wowz') return\n      this.form = {\n        name: 'Joshua Ryan',\n        organization_name: 'Joshua\\'s Goat Material',\n        email: 'jorymullet@gmail.com',\n        password: 'password',\n        repeat_password: 'password',\n      }\n    }\n  },\n  data () {\n    return {\n      form: {\n        name: '',\n        organizaition_name: '',\n        email: '',\n        password: '',\n        repeat_password: '',\n      },\n      formOptions: {\n        name: {\n          errorIf: (val) => val ? '' : 'Enter name',\n          title: 'Your name',\n        },\n        organization_name: {\n          errorIf: (val) => val ? '' : 'Enter organization name',\n          title: 'Name of organization',\n        },\n        email: {\n          errorIf: (val) => this.$regex.is(val).a('email') ? '' : 'Enter valid email',\n          title: 'Email',\n        },\n        password: {\n          errorIf: (val) => val && val.length >= 8 ? '' : 'Must be 8 characters or more',\n          title: 'Password',\n          type: 'password',\n        },\n        repeat_password: {\n          errorIf: (val) => this.form.password === val ? '' : 'Passwords must match',\n          title: 'Repeat password',\n          type: 'password',\n        },\n      },\n    }\n  },\n  methods: {\n    async signUp () {\n      const errors = this.$proErrors()\n      if (errors.length) return errors.forEach(err => this.$toast(err))\n      this.$showLoading()\n\n      let userRes\n      try {\n        userRes = await this.$HTTP({\n          method: 'post',\n          uri: 'users',\n          secure: false,\n          body: this.form,\n        })\n      } catch (err) {\n        console.log(err)\n        this.$hideLoading()\n        return alert(err.body.message)\n      }\n      const authToken = userRes.body.authToken\n      await this.$auth.signInWithCustomToken(authToken)\n      this.$hideLoading()\n    },\n  },\n}\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/components/routed/Public","sourcesContent":["<script>\nimport ProInput from '$common/ProInput'\nexport default {\n  name: 'PublicSignUp',\n  components: {\n    'pro-input': ProInput,\n  },\n  watch: {\n    'form.name': function (val) {\n      if (val !== 'wowz') return\n      this.form = {\n        name: 'Joshua Ryan',\n        organization_name: 'Joshua\\'s Goat Material',\n        email: 'jorymullet@gmail.com',\n        password: 'password',\n        repeat_password: 'password',\n      }\n    }\n  },\n  data () {\n    return {\n      form: {\n        name: '',\n        organizaition_name: '',\n        email: '',\n        password: '',\n        repeat_password: '',\n      },\n      formOptions: {\n        name: {\n          errorIf: (val) => val ? '' : 'Enter name',\n          title: 'Your name',\n        },\n        organization_name: {\n          errorIf: (val) => val ? '' : 'Enter organization name',\n          title: 'Name of organization',\n        },\n        email: {\n          errorIf: (val) => this.$regex.is(val).a('email') ? '' : 'Enter valid email',\n          title: 'Email',\n        },\n        password: {\n          errorIf: (val) => val && val.length >= 8 ? '' : 'Must be 8 characters or more',\n          title: 'Password',\n          type: 'password',\n        },\n        repeat_password: {\n          errorIf: (val) => this.form.password === val ? '' : 'Passwords must match',\n          title: 'Repeat password',\n          type: 'password',\n        },\n      },\n    }\n  },\n  methods: {\n    async signUp () {\n      const errors = this.$proErrors()\n      if (errors.length) return errors.forEach(err => this.$toast(err))\n      this.$showLoading()\n\n      let userRes\n      try {\n        userRes = await this.$HTTP({\n          method: 'post',\n          uri: 'users',\n          secure: false,\n          body: this.form,\n        })\n      } catch (err) {\n        console.log(err)\n        this.$hideLoading()\n        return alert(err.body.message)\n      }\n      const authToken = userRes.body.authToken\n      await this.$auth.signInWithCustomToken(authToken)\n      this.$hideLoading()\n    },\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  .public-sign-up-main\n    .public-sign-up-container\n      .pro-form\n        .title Sign Up\n        .form-row(\n          v-for='(options, field) in formOptions'\n        )\n          pro-input(\n            :options='options'\n            v-model='form[field]'\n          )\n        .form-row.buttons-2\n          .pro-button.outline.minor(\n            @click='$router.go(-1)'\n          ) Back\n          .pro-button.outline.major(\n            @click='signUp'\n          ) Sign Up\n</template>\n\n<style lang=\"sass\" scoped>\n  @import '$styles/form.sass'\n  .public-sign-up-main\n    .public-sign-up-container\n      display: grid\n      justify-items: center\n      .pro-form\n        max-width: 500px\n        width: 100%\n        margin-top: 50px\n</style>\n\n"]}]}